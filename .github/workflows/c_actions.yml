# Copyright (c) 2020 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This workflow will install Python dependencies, run tests, lint and rat with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: C Actions
on: [push]
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Checkout SupportScripts
      uses: actions/checkout@v2
      with:
        repository: SpiNNakerManchester/SupportScripts
        path: support

    - name: Install Ubuntu packages
      uses: ./support/actions/apt-get-install
      with:
        packages: doxygen gcc-arm-none-eabi
    - name: Configure Python 3.8
      # Note: Python is needed for spinn_utilities.make_tools when building
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Set environment variables
      run: |
        echo "SPINN_DIRS=$PWD/spinnaker_tools" >> $GITHUB_ENV
        echo "NEURAL_MODELLING_DIRS=$PWD/sPyNNaker/neural_modelling" >> $GITHUB_ENV

    - name: Checkout SpiNNaker C Dependencies
      uses: ./support/actions/checkout-spinn-deps
      with:
        # Note: SpiNNUtils needed for spinn_utilities.make_tools
        repositories: >
          spinnaker_tools spinn_common SpiNNUtils SpiNNFrontEndCommon sPyNNaker
    - name: Install SpiNNUtils
      run: python setup.py install
      working-directory: SpiNNUtils

    - name: "Check: Lint C lib code using Vera++"
      # Note: run this before building to avoid linting modified_src directories
      uses: ./support/actions/vera
      with:
        base-dir: c_models/src

    - name: Build SpiNNaker C dependencies
      run: |
        make -C $SPINN_DIRS
        make -C spinn_common install
        make -C SpiNNFrontEndCommon/c_common install

    - name: Build C code
      run: make
      working-directory: c_models
      env:
        CFLAGS: -fdiagnostics-color=always

    # To be added: Documentation building

    # Note: This workflow does not run the C code; that'd be an integration test
